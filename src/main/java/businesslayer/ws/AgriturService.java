
package businesslayer.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AgriturService", targetNamespace = "http://ws.businesslayer/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AgriturService {


    /**
     * 
     * @param arg0
     * @return
     *     returns businesslayer.ws.Agritur
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDetailedAgritur", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.GetDetailedAgritur")
    @ResponseWrapper(localName = "getDetailedAgriturResponse", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.GetDetailedAgriturResponse")
    @Action(input = "http://ws.businesslayer/AgriturService/getDetailedAgriturRequest", output = "http://ws.businesslayer/AgriturService/getDetailedAgriturResponse")
    public Agritur getDetailedAgritur(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<businesslayer.ws.Agritur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNearAgritur", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.GetNearAgritur")
    @ResponseWrapper(localName = "getNearAgriturResponse", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.GetNearAgriturResponse")
    @Action(input = "http://ws.businesslayer/AgriturService/getNearAgriturRequest", output = "http://ws.businesslayer/AgriturService/getNearAgriturResponse")
    public List<Agritur> getNearAgritur(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<businesslayer.ws.Agritur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAgriturByPlace", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.GetAgriturByPlace")
    @ResponseWrapper(localName = "getAgriturByPlaceResponse", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.GetAgriturByPlaceResponse")
    @Action(input = "http://ws.businesslayer/AgriturService/getAgriturByPlaceRequest", output = "http://ws.businesslayer/AgriturService/getAgriturByPlaceResponse")
    public List<Agritur> getAgriturByPlace(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<businesslayer.ws.Agritur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAgriturByQuery", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.GetAgriturByQuery")
    @ResponseWrapper(localName = "getAgriturByQueryResponse", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.GetAgriturByQueryResponse")
    @Action(input = "http://ws.businesslayer/AgriturService/getAgriturByQueryRequest", output = "http://ws.businesslayer/AgriturService/getAgriturByQueryResponse")
    public List<Agritur> getAgriturByQuery(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "userMarkAgritur", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.UserMarkAgritur")
    @ResponseWrapper(localName = "userMarkAgriturResponse", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.UserMarkAgriturResponse")
    @Action(input = "http://ws.businesslayer/AgriturService/userMarkAgriturRequest", output = "http://ws.businesslayer/AgriturService/userMarkAgriturResponse")
    public void userMarkAgritur(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "userViewAgritur", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.UserViewAgritur")
    @ResponseWrapper(localName = "userViewAgriturResponse", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.UserViewAgriturResponse")
    @Action(input = "http://ws.businesslayer/AgriturService/userViewAgriturRequest", output = "http://ws.businesslayer/AgriturService/userViewAgriturResponse")
    public void userViewAgritur(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<businesslayer.ws.Agritur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "recommendAgritur", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.RecommendAgritur")
    @ResponseWrapper(localName = "recommendAgriturResponse", targetNamespace = "http://ws.businesslayer/", className = "businesslayer.ws.RecommendAgriturResponse")
    @Action(input = "http://ws.businesslayer/AgriturService/recommendAgriturRequest", output = "http://ws.businesslayer/AgriturService/recommendAgriturResponse")
    public List<Agritur> recommendAgritur(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
